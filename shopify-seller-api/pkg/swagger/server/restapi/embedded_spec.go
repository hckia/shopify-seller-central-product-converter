// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HTTP server in Go with Swagger endpoints definition.",
    "title": "shopify-seller-api",
    "version": "0.1.0"
  },
  "paths": {
    "/health": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "operationId": "checkHealth",
        "responses": {
          "200": {
            "description": "OK message.",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    },
    "/product/{make}": {
      "get": {
        "description": "Return an array of objects for a specific make that will help produce color swatches for Amazon seller central.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "name of the make we want on all product variants.",
            "name": "make",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the data necessary to make seller central Product files.",
            "schema": {
              "$ref": "#/definitions/makeProducts"
            }
          },
          "400": {
            "description": "Invalid \"make\" provided or not available."
          }
        }
      }
    },
    "/swatch/{make}": {
      "get": {
        "description": "Return an array of objects for a specific make that will help produce color swatches for Amazon seller central.",
        "parameters": [
          {
            "type": "string",
            "description": "Car make name",
            "name": "make",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the data necessary to make all color swatches.",
            "schema": {
              "$ref": "#/definitions/makeSwatches"
            }
          },
          "400": {
            "description": "Invalid \"make\" provided or not available."
          }
        }
      }
    }
  },
  "definitions": {
    "makeProducts": {
      "type": "array",
      "title": "Make Products",
      "items": {
        "title": "Product Row",
        "$ref": "#/definitions/productRow"
      }
    },
    "makeSwatches": {
      "type": "array",
      "title": "Make Swatches",
      "items": {
        "title": "Swatch Row",
        "$ref": "#/definitions/swatchRow"
      }
    },
    "productRow": {
      "type": "object",
      "title": "Single Row of data to produce a colors Amazon Seller Central Product",
      "properties": {
        "handle": {
          "type": "string",
          "title": "the handle for the product variation example is make-model-year-touch-up-kit"
        },
        "optionName": {
          "type": "string",
          "title": "name of the Option1 Name field"
        },
        "optionValue": {
          "type": "string",
          "title": "value of the Option1 Name field, labeled Option1 Value"
        },
        "price": {
          "type": "number",
          "title": "price of the product."
        },
        "year": {
          "type": "integer",
          "title": "year of the product",
          "maximum": 2023,
          "minimum": 2000
        }
      }
    },
    "swatchRow": {
      "type": "object",
      "title": "Single Row of data to produce a color swatch for a specific Make Model Year, and Color",
      "properties": {
        "colorCode": {
          "type": "string",
          "title": "color code on row"
        },
        "colorName": {
          "type": "string",
          "title": "color name on row"
        },
        "handle": {
          "type": "string",
          "title": "the handle for the product variation example is make-model-year-touch-up-kit"
        },
        "hexCode": {
          "type": "string",
          "title": "hex code value on row. Field name is Variant Metafield variants.color [color]"
        },
        "make": {
          "type": "string",
          "title": "Vehicle make on row"
        },
        "mmy": {
          "type": "string",
          "title": "make, model, year on row"
        },
        "model": {
          "type": "string",
          "title": "Vehicle model on row"
        },
        "tricoat": {
          "type": "boolean",
          "title": "check if it is tricoat or not"
        },
        "year": {
          "type": "integer",
          "title": "Vehcile year on row",
          "maximum": 2023,
          "minimum": 2000
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HTTP server in Go with Swagger endpoints definition.",
    "title": "shopify-seller-api",
    "version": "0.1.0"
  },
  "paths": {
    "/health": {
      "get": {
        "produces": [
          "text/plain"
        ],
        "operationId": "checkHealth",
        "responses": {
          "200": {
            "description": "OK message.",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            }
          }
        }
      }
    },
    "/product/{make}": {
      "get": {
        "description": "Return an array of objects for a specific make that will help produce color swatches for Amazon seller central.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "name of the make we want on all product variants.",
            "name": "make",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the data necessary to make seller central Product files.",
            "schema": {
              "$ref": "#/definitions/makeProducts"
            }
          },
          "400": {
            "description": "Invalid \"make\" provided or not available."
          }
        }
      }
    },
    "/swatch/{make}": {
      "get": {
        "description": "Return an array of objects for a specific make that will help produce color swatches for Amazon seller central.",
        "parameters": [
          {
            "type": "string",
            "description": "Car make name",
            "name": "make",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the data necessary to make all color swatches.",
            "schema": {
              "$ref": "#/definitions/makeSwatches"
            }
          },
          "400": {
            "description": "Invalid \"make\" provided or not available."
          }
        }
      }
    }
  },
  "definitions": {
    "makeProducts": {
      "type": "array",
      "title": "Make Products",
      "items": {
        "title": "Product Row",
        "$ref": "#/definitions/productRow"
      }
    },
    "makeSwatches": {
      "type": "array",
      "title": "Make Swatches",
      "items": {
        "title": "Swatch Row",
        "$ref": "#/definitions/swatchRow"
      }
    },
    "productRow": {
      "type": "object",
      "title": "Single Row of data to produce a colors Amazon Seller Central Product",
      "properties": {
        "handle": {
          "type": "string",
          "title": "the handle for the product variation example is make-model-year-touch-up-kit"
        },
        "optionName": {
          "type": "string",
          "title": "name of the Option1 Name field"
        },
        "optionValue": {
          "type": "string",
          "title": "value of the Option1 Name field, labeled Option1 Value"
        },
        "price": {
          "type": "number",
          "title": "price of the product."
        },
        "year": {
          "type": "integer",
          "title": "year of the product",
          "maximum": 2023,
          "minimum": 2000
        }
      }
    },
    "swatchRow": {
      "type": "object",
      "title": "Single Row of data to produce a color swatch for a specific Make Model Year, and Color",
      "properties": {
        "colorCode": {
          "type": "string",
          "title": "color code on row"
        },
        "colorName": {
          "type": "string",
          "title": "color name on row"
        },
        "handle": {
          "type": "string",
          "title": "the handle for the product variation example is make-model-year-touch-up-kit"
        },
        "hexCode": {
          "type": "string",
          "title": "hex code value on row. Field name is Variant Metafield variants.color [color]"
        },
        "make": {
          "type": "string",
          "title": "Vehicle make on row"
        },
        "mmy": {
          "type": "string",
          "title": "make, model, year on row"
        },
        "model": {
          "type": "string",
          "title": "Vehicle model on row"
        },
        "tricoat": {
          "type": "boolean",
          "title": "check if it is tricoat or not"
        },
        "year": {
          "type": "integer",
          "title": "Vehcile year on row",
          "maximum": 2023,
          "minimum": 2000
        }
      }
    }
  }
}`))
}
