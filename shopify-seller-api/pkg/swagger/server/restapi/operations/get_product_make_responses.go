// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/hckia/shopify-seller-central-product-converter/shopify-seller-api/pkg/swagger/server/models"
)

// GetProductMakeOKCode is the HTTP code returned for type GetProductMakeOK
const GetProductMakeOKCode int = 200

/*GetProductMakeOK A JSON object containing the data necessary to make seller central Product files.

swagger:response getProductMakeOK
*/
type GetProductMakeOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ProductRow `json:"body,omitempty"`
}

// NewGetProductMakeOK creates GetProductMakeOK with default headers values
func NewGetProductMakeOK() *GetProductMakeOK {

	return &GetProductMakeOK{}
}

// WithPayload adds the payload to the get product make o k response
func (o *GetProductMakeOK) WithPayload(payload []*models.ProductRow) *GetProductMakeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get product make o k response
func (o *GetProductMakeOK) SetPayload(payload []*models.ProductRow) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProductMakeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ProductRow, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetProductMakeBadRequestCode is the HTTP code returned for type GetProductMakeBadRequest
const GetProductMakeBadRequestCode int = 400

/*GetProductMakeBadRequest Invalid "make" provided or not available.

swagger:response getProductMakeBadRequest
*/
type GetProductMakeBadRequest struct {
}

// NewGetProductMakeBadRequest creates GetProductMakeBadRequest with default headers values
func NewGetProductMakeBadRequest() *GetProductMakeBadRequest {

	return &GetProductMakeBadRequest{}
}

// WriteResponse to the client
func (o *GetProductMakeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
